name: Gns3LabLauncer
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./src/server/var/mongodb:/data/db
    networks:
      - gns3netlab-network
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh \"mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/\" --quiet | grep -q 1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:8.0-rc1
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - gns3netlab-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  openvpn:
    image: rimorgin/openvpn
    container_name: openvpn
    restart: unless-stopped
    ports:
      - "1194:1194/udp"
    cap_add:
      - NET_ADMIN
      - MKNOD
    environment:
      - OPENVPN_SERVER_IP=10.15.20.26
    volumes:
      - ./src/server/var/openvpn:/data
    networks:
      - gns3netlab-network
    privileged: true
    healthcheck:
      test: ["CMD", "pgrep", "openvpn"]
      interval: 5s
      timeout: 5s
      retries: 10
  mongo-gui:
    image: mongo-express
    container_name: mongo-gui
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=${VITE_MONGOWEB_ADMIN_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${VITE_MONGOWEB_ADMIN_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:${MONGODB_PORT}
      - ME_CONFIG_SITE_GRIDFS_ENABLED=true
      - ME_CONFIG_SITE_SSL_ENABLED=${ME_CONFIG_SITE_SSL_ENABLED}
      - ME_CONFIG_SITE_SSL_CRT_PATH=/certs/mongo-gui.cert.pem
      - ME_CONFIG_SITE_SSL_KEY_PATH=/certs/mongo-gui.key.pem
    volumes:
      - ./cert:/certs:ro
    depends_on:
      - mongodb
    networks:
      - gns3netlab-network
    command: /bin/sh -c 'until nc -z mongodb 27017; do echo "Waiting for MongoDB..."; sleep 2; done; node app.js'



networks:
  gns3netlab-network:
    driver: bridge
