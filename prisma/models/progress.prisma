model Progress {
  id String @id @default(uuid())

  /// Either `studentId` or `groupId` must be set (but not both).
  studentId String?
  groupId   String?

  projectId   String // the project being tracked
  classroomId String? // optionally, to scope it to a classroom

  currentStep     Int?            @default(0)
  totalSteps      Int?            @default(0)

  percentComplete Float           @default(0) // 0–100
  status          ProgressStatus? @default(NOT_STARTED)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  completedAt DateTime? // optional — when marked complete

  student   Student?    @relation("StudentProgresses", fields: [studentId], references: [userId], onDelete: Cascade)
  group     UserGroups? @relation("GroupProgresses", fields: [groupId], references: [id], onDelete: Cascade)
  project   Project     @relation("ProjectProgresses", fields: [projectId], references: [id], onDelete: Cascade)
  classroom Classroom?  @relation("ClassroomProgresses", fields: [classroomId], references: [id])

  @@unique([studentId, projectId], name: "uniqueStudentProjectProgress")
  @@unique([groupId, projectId], name: "uniqueGroupProjectProgress")
}
