model Submission {
  id          String   @id @default(uuid())
  submittedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  fileUrl     String? // e.g. file path
  status      String? // e.g. "submitted", "graded", "late"
  grade       Float? // optional grading
  feedback    String? // optional teacher feedback

  projectId String
  studentId String? // used if it's an individual submission
  groupId   String? // used if it's a group submission

  project Project          @relation(fields: [projectId], references: [id], onDelete: Cascade)
  student Student?         @relation("StudentSubmissions", fields: [studentId], references: [userId])
  group   UserGroups?      @relation("GroupSubmissions", fields: [groupId], references: [id])
  files   SubmissionFile[] @relation("SubmissionFiles")

  @@unique([projectId, studentId], name: "uniqueSubmissionPerStudent")
  @@unique([projectId, groupId], name: "uniqueSubmissionPerGroup")
}

model SubmissionFile {
  id         String   @id @default(uuid())
  url        String
  name       String?
  uploadedAt DateTime @default(now())

  submissionId String
  uploadedById String

  submission Submission @relation("SubmissionFiles", fields: [submissionId], references: [id], onDelete: Cascade)
  uploadedBy Student    @relation(fields: [uploadedById], references: [userId], onDelete: Cascade)
}
